{"version":3,"sources":["components/Header/Header.js","components/TodoItem/TodoItem.js","components/TodoList/TodoList.js","components/Footer/Footer.js","App.js","index.js"],"names":["uuidv1","require","Header","state","titleOfTodo","handleChangeInput","_ref","target","_this","setState","value","handleInputTodo","event","preventDefault","addNewTodo","props","title","id","completed","this","react_default","a","createElement","className","onSubmit","placeholder","onChange","autoFocus","React","Component","TodoItem","isEditing","editedFilmTitle","todoTitle","handleDoubleClick","handleChangeEdit","onEditChange","handleEditSubmit","_this$props","handleDoubleClickEditTitle","todoId","handleDeleteTodo","_this2","_this$props2","todoStatus","handleTodoStatus","liClassName","cx","editing","type","e","onBlur","checked","onDoubleClick","htmlFor","onClick","TodoList","todosList","length","map","_ref2","components_TodoItem_TodoItem","key","Footer","handleButtonChange","originalTodos","buttonSelected","handleDeleteAllCompleted","buttonClearStyles","disable","some","todo","footerStyles","hidden","filter","href","App","toDoListArray","toDoListArrayOriginal","selected","handleAdd","prevState","concat","Object","toConsumableArray","filmTitle","mapFuncAddTitle","_objectSpread","handleDelete","arrFilter","handleStatus","mapFuncCompletedTodo","handleCompletedAll","filterFunc","arr","every","JSON","parse","localStorage","getItem","_this$state","todos","setItem","stringify","_this$state2","components_Header_Header","style","display","components_TodoList_TodoList","components_Footer_Footer","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.e39d3789.chunk.js","sourcesContent":["import React from 'react';\n\nconst uuidv1 = require('uuid/v1');\n\nclass Header extends React.Component {\n  state = {\n    titleOfTodo: '',\n  };\n\n  handleChangeInput = ({ target }) => {\n    this.setState({\n      titleOfTodo: target.value,\n    });\n  };\n\n  handleInputTodo = (event) => {\n    event.preventDefault();\n    const { addNewTodo } = this.props;\n    const { titleOfTodo } = this.state;\n\n    addNewTodo({\n      title: titleOfTodo,\n      id: uuidv1(),\n      completed: false,\n    });\n\n    this.setState({\n      titleOfTodo: '',\n    });\n  };\n\n  render() {\n    const { titleOfTodo } = this.state;\n\n    return (\n      <header className=\"header\">\n        <h1>todos</h1>\n        <form onSubmit={this.handleInputTodo}>\n          <input\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            onChange={this.handleChangeInput}\n            value={titleOfTodo}\n            autoFocus\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React from 'react';\nimport cx from 'classnames';\n\nclass TodoItem extends React.Component {\n  state = {\n    isEditing: false,\n    editedFilmTitle: this.props.todoTitle,\n  }\n\n  handleDoubleClick = () => {\n    this.setState({\n      isEditing: true,\n    });\n  }\n\n  handleChangeEdit = () => {\n    this.setState({\n      isEditing: false,\n    });\n  }\n\n  onEditChange = ({ target }) => {\n    this.setState({\n      editedFilmTitle: target.value,\n    });\n  }\n\n  handleEditSubmit = () => {\n    const {\n      handleDoubleClickEditTitle,\n      todoId,\n      handleDeleteTodo,\n    } = this.props;\n    const { editedFilmTitle } = this.state;\n\n    this.setState({\n      isEditing: false,\n    });\n    if (editedFilmTitle !== '') {\n      handleDoubleClickEditTitle(editedFilmTitle, todoId);\n    } else {\n      handleDeleteTodo(todoId);\n    }\n  }\n\n  render() {\n    const {\n      todoTitle,\n      todoStatus,\n      todoId,\n      handleTodoStatus,\n      handleDeleteTodo,\n    } = this.props;\n    const { editedFilmTitle } = this.state;\n    const liClassName = cx({\n      editing: this.state.isEditing,\n      completed: todoStatus,\n    });\n\n    return (\n      <li className={liClassName}>\n        { !this.state.isEditing\n          ? (\n            <div className=\"view\">\n              <input\n                type=\"checkbox\"\n                className=\"toggle\"\n                id={todoId}\n                checked={todoStatus}\n                onChange={() => handleTodoStatus(todoId)}\n              />\n              <p\n                className=\"label\"\n                onDoubleClick={this.handleDoubleClick}\n                htmlFor={todoId}\n              >\n                {todoTitle}\n              </p>\n              <button\n                type=\"button\"\n                className=\"destroy\"\n                onClick={() => handleDeleteTodo(todoId)}\n              />\n            </div>\n          )\n          : (\n            <form\n              onSubmit={this.handleEditSubmit}\n            >\n              <input\n                type=\"text\"\n                className=\"edit\"\n                value={editedFilmTitle}\n                onChange={e => this.onEditChange(e)}\n                onBlur={this.handleChangeEdit}\n                autoFocus\n              />\n            </form>\n          )\n        }\n      </li>\n    );\n  }\n}\n\nexport default TodoItem;\n","import React from 'react';\nimport TodoItem from '../TodoItem/TodoItem';\n\nconst TodoList = ({\n  todosList,\n  handleTodoStatus,\n  handleDeleteTodo,\n  handleDoubleClickEditTitle,\n}) => (\n  <ul className=\"todo-list\">\n    {todosList.length\n      ? todosList\n        .map(({ title, completed, id }) => (\n          <TodoItem\n            handleDoubleClickEditTitle={handleDoubleClickEditTitle}\n            todoStatus={completed}\n            todoTitle={title}\n            handleTodoStatus={handleTodoStatus}\n            handleDeleteTodo={handleDeleteTodo}\n            key={id}\n            todoId={id}\n            todosList={todosList}\n          />\n        ))\n      : null\n    }\n  </ul>\n);\n\nexport default TodoList;\n","import React from 'react';\nimport cx from 'classnames';\n\nconst Footer = ({\n  handleButtonChange,\n  todosList,\n  originalTodos,\n  buttonSelected,\n  handleDeleteAllCompleted,\n}) => {\n  const buttonClearStyles = cx('clear-completed', {\n    disable: !todosList.some(todo => todo.completed),\n  });\n  const footerStyles = cx('footer', {\n    hidden: !originalTodos.length,\n  });\n\n  return (\n    <footer className={footerStyles}>\n      <span className=\"todo-count\">\n        {originalTodos.length && originalTodos\n          .filter(todo => !todo.completed).length }\n        {' items left'}\n      </span>\n\n      <ul className=\"filters\">\n        <li>\n          <a\n            href=\"#/\"\n            className={buttonSelected === 'all' ? 'selected' : ''}\n            onClick={() => handleButtonChange('all')}\n          >\n            All\n          </a>\n        </li>\n\n        <li>\n          <a\n            href=\"#/active\"\n            onClick={() => handleButtonChange('active')}\n            className={buttonSelected === 'active' ? 'selected' : ''}\n          >\n            Active\n          </a>\n        </li>\n\n        <li>\n          <a\n            href=\"#/completed\"\n            onClick={() => handleButtonChange('completed')}\n            className={buttonSelected === 'completed' ? 'selected' : ''}\n          >\n            Completed\n          </a>\n        </li>\n      </ul>\n\n      <button\n        type=\"button\"\n        className={buttonClearStyles}\n        onClick={handleDeleteAllCompleted}\n      >\n        Clear completed\n      </button>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport Header from './components/Header/Header';\nimport TodoList from './components/TodoList/TodoList';\nimport Footer from './components/Footer/Footer';\n\n class App extends React.Component {\n   state = {\n     toDoListArray: [],\n     toDoListArrayOriginal: [],\n     selected: 'all',\n   };\n\n   componentDidMount() {\n     this.setState({\n       toDoListArray: JSON.parse(localStorage.getItem('todosList')) || [],\n       toDoListArrayOriginal: JSON\n         .parse(localStorage.getItem('originalTodosList')) || [],\n     });\n\n     this.handleButtonChange(this.state.selected);\n   }\n\n   componentDidUpdate(prevState) {\n     const { toDoListArray, toDoListArrayOriginal } = this.state;\n     if (toDoListArray !== prevState.todos) {\n       localStorage.setItem('originalTodosList', JSON.stringify(toDoListArrayOriginal));\n       localStorage.setItem('todosList', JSON.stringify(toDoListArray));\n     }\n   }\n\n   handleAdd = (todo) => {\n     if (todo.title) {\n       this.setState(prevState => ({\n         toDoListArray: [...prevState.toDoListArray, todo],\n         toDoListArrayOriginal: [...prevState.toDoListArrayOriginal, todo],\n       }));\n     }\n\n     this.handleButtonChange(this.state.selected);\n   };\n\n   handleDoubleClickEditTitle = (filmTitle, todoId) => {\n     const mapFuncAddTitle = todo => (\n       todo.id === todoId\n         ? { ...todo, title: filmTitle }\n         : todo\n     );\n\n     this.setState(prevState => ({\n       toDoListArray: prevState.toDoListArray\n        .map(mapFuncAddTitle),\n       toDoListArrayOriginal: prevState.toDoListArrayOriginal\n       .map(mapFuncAddTitle),\n   }));\n   };\n\n   handleDelete = (todoId) => {\n     const arrFilter = todo => (\n       todo.id !== todoId\n     );\n\n     this.setState(prevState => ({\n       toDoListArray: prevState.toDoListArray\n         .filter(arrFilter),\n       toDoListArrayOriginal: prevState.toDoListArrayOriginal\n         .filter(arrFilter),\n     }));\n   };\n\n   handleStatus = (todoId) => {\n     const mapFuncCompletedTodo = todo => (\n       todo.id === todoId\n         ? { ...todo, completed: !todo.completed }\n         : todo\n     );\n     this.setState(prevState => ({\n       toDoListArray: prevState.toDoListArray\n         .map(mapFuncCompletedTodo),\n       toDoListArrayOriginal: prevState.toDoListArrayOriginal\n         .map(mapFuncCompletedTodo),\n     }));\n\n     this.handleButtonChange(this.state.selected);\n   };\n\n   handleCompletedAll = () => {\n     const filterFunc = arr => (\n       arr.map(todo => ({\n         ...todo,\n         completed: !arr.every(({ completed }) => completed),\n       }))\n     );\n\n     this.setState(prevState => ({\n       toDoListArray: filterFunc(prevState.toDoListArray),\n       toDoListArrayOriginal: filterFunc(prevState.toDoListArrayOriginal),\n     }));\n\n     this.handleButtonChange(this.state.selected);\n   };\n\n   handleButtonChange = (value) => {\n     switch (value) {\n       case 'active':\n         this.setState(prevState => ({\n           toDoListArray: prevState.toDoListArrayOriginal.filter(todo => !todo.completed),\n           buttonSelected: 'active',\n         }));\n         break;\n       case 'completed':\n         this.setState(prevState => ({\n           toDoListArray: prevState.toDoListArrayOriginal.filter(todo => todo.completed),\n           buttonSelected: 'completed',\n         }));\n         break;\n       case 'all':\n       default:\n         this.setState(prevState => ({\n           toDoListArray: [...prevState.toDoListArrayOriginal],\n           buttonSelected: 'all',\n         }));\n     }\n   }\n\n   handleDeleteAllCompleted = () => {\n     const filterFunc = arr => (\n       arr.filter(todo => !todo.completed)\n     );\n\n     this.setState(prevState => ({\n       toDoListArray: filterFunc(prevState.toDoListArray),\n       toDoListArrayOriginal: filterFunc(prevState.toDoListArrayOriginal),\n     }));\n   };\n\n   render() {\n     const {\n       toDoListArray, toDoListArrayOriginal, selected,\n     } = this.state;\n\n     return (\n       <section className=\"todoapp\">\n         <Header addNewTodo={this.handleAdd} />\n\n         <section className=\"main\" style={{ display: 'block' }}>\n           <input\n             type=\"checkbox\"\n             id=\"toggle-all\"\n             className=\"toggle-all\"\n             onChange={this.handleCompletedAll}\n           />\n           <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n           <TodoList\n             todosList={toDoListArray}\n             handleTodoStatus={this.handleStatus}\n             handleDeleteTodo={this.handleDelete}\n             handleDoubleClickEditTitle={this.handleDoubleClickEditTitle}\n           />\n         </section>\n         <Footer\n           handleButtonChange={this.handleButtonChange}\n           originalTodos={toDoListArrayOriginal}\n           todosList={toDoListArray}\n           buttonSelected={selected}\n           handleDeleteAllCompleted={this.handleDeleteAllCompleted}\n         />\n       </section>\n     );\n   }\n }\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}